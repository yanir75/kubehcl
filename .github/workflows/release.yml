# .github/workflows/release.yml
name: goreleaser

on:
  push:
    # run only against tags
    tags:
      - "*"

permissions:
  contents: write
  # packages: write
  # issues: write
  # id-token: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: kubehcl

      - name: Checkout another repository
        uses: actions/checkout@v4
        with:
          repository: kubernetes-sigs/kubectl-validate 
          path: kubectl-validate

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.25.0
      - name: get-latest-versions
        working-directory: kubectl-validate
        run: |
          go run cmd/download-builtin-schemas/main.go ../kubehcl/kube/pkg/openapiclient/builtins 
          ls ../kubehcl/kube/pkg/openapiclient/builtins

      - name: Import GPG key
        working-directory: kubehcl
        run: |
          GPG_KEY_FILE=/tmp/signing-key.gpg
          echo "${{ secrets.GPG_KEY }}"  > "${GPG_KEY_FILE}"
          
          gpg --batch --import ${GPG_KEY_FILE}
          GPG_FINGERPRINT=$(gpg --list-secret-keys --keyid-format LONG | awk '/^sec/{sub(/.*\//, "", $2); print $2; exit}')
          
          echo "GPG_FINGERPRINT=${GPG_FINGERPRINT}" >> "${GITHUB_ENV}"
          echo "GPG_KEY_FILE=${GPG_KEY_FILE}" >> "${GITHUB_ENV}"
        env:
          GPG_TTY: /dev/ttys000  # Set the GPG_TTY to avoid issues with pinentry

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          workdir: kubehcl
          distribution: goreleaser
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}          

      - name: Remove GPG key
        if: always()
        working-directory: kubehcl
        run: |
          rm -rf ~/.gnupg
          if [ -n "${GPG_KEY_FILE}" ]; then
            rm -rf "${GPG_KEY_FILE}"
          fi